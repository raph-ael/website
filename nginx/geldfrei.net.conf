# www. nach non www weiterleiten
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name www.geldfrei.net;
  ssl_certificate /etc/letsencrypt/live/cloud.geldfrei.net-0003/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/cloud.geldfrei.net-0003/privkey.pem;


  return 301 https://geldfrei.net$request_uri;
}

server {
    listen       80;
    server_name  geldfrei.net www.geldfrei.net;
    return       301 https://geldfrei.net$request_uri;
}

server {
    
    listen 443 ssl;
    listen [::]:443 ssl;

    access_log /var/log/nginx/geldfrei.com-access.log;

    # auth_basic "Restricted";
    # auth_basic_user_file "/etc/nginx/.htpasswd";

    # SSL config
    ssl_certificate /etc/letsencrypt/live/cloud.geldfrei.net-0003/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.geldfrei.net-0003/privkey.pem;

    ##########################
    # In production require SSL
    # listen 443 ssl default_server;

    # ssl on;
    # ssl_session_timeout  5m;
    # ssl_protocols  SSLv2 SSLv3 TLSv1;
    # ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    # ssl_prefer_server_ciphers   on;

    # These locations depend on where you store your certs
    # ssl_certificate        /var/nginx/certs/default.cert;
    # ssl_certificate_key    /var/nginx/certs/default.key;
    ##########################

    # Your Domain Name
    server_name geldfrei.net;

    # Sitemap XML
#    rewrite ^/sitemap.xml$ /api/v1/sitemap last;

    # robots.txt
#    rewrite ^/robots.txt$ /api/v1/robotstxt/gen last;

    # remove index.html as dublikat
    #rewrite ^(.*/)index.html$ $1 permanent;


    # This is the folder that index.php is in
    root /var/www/geldfrei.net/website/build;
    #root /var/www/baustelle;
    index index.html;

    charset utf-8;
    client_max_body_size 100M;
    fastcgi_read_timeout 1800;

    # Represents the root of the domain
    # http://localhost:8000/[index.php]
    location /api/ {
        # auth_basic "Restricted";
        # auth_basic_user_file "/etc/nginx/.htpasswd";
        # Matches URLS `$_GET['_url']`
        try_files $uri $uri/ /api/index.php?_url=$uri&$args;
        #try_files $uri $uri/index.html /api/index.php?_url=$uri&$args;
        #try_files $uri $uri/ /api/index.php?_url=$uri&$args;
    }

    location /sitemap.xml {
        default_type application/xml;
        proxy_pass https://geldfrei.net/api/v1/sitemap;
        #rewrite .* /api/v1/sitemap redirect;
        #rewrite .* /api/v1/sitemap redirect;
        #rewrite ^/sitemap.xml$ /api/v1/sitemap last;
   }

    location /robots.txt {
        default_type text/plain;
        proxy_pass https://geldfrei.net/api/v1/robotstxt/gen;
        #rewrite .* /api/v1/robotstxt/gen redirect; 
   }

    # remove index.html to avoid duplicates
    #location /index {
    #    return 301 https://phonepunx.com/;
    #}

    # When the HTTP request does not match the above
    # and the file ends in .php
    location ~ [^/]\.php(/|$) {
        # auth_basic off;
        # try_files $uri =404;

        # Ubuntu and PHP7.0-fpm in socket mode
        # This path is dependent on the version of PHP install
        fastcgi_pass  unix:/var/run/php/php7.2-fpm.sock;

        # Alternatively you use PHP-FPM in TCP mode (Required on Windows)
        # You will need to configure FPM to listen on a standard port
        # https://www.nginx.com/resources/wiki/start/topics/examples/phpfastcgionwindows/
        # fastcgi_pass  127.0.0.1:9000;

        fastcgi_index /index.php;

        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        fastcgi_param PATH_INFO       $fastcgi_path_info;
        # fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        # and set php.ini cgi.fix_pathinfo=0

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires       max;
        log_not_found off;
        access_log    off;
    }

}

